/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.cs.helloworldservice;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-02-27")
public class hello implements org.apache.thrift.TBase<hello, hello._Fields>, java.io.Serializable, Cloneable, Comparable<hello> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("hello");

  private static final org.apache.thrift.protocol.TField NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("number", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField FIRST__NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("first_Name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField LAST__NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("last_Name", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField AGE_FIELD_DESC = new org.apache.thrift.protocol.TField("age", org.apache.thrift.protocol.TType.I32, (short)4);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new helloStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new helloTupleSchemeFactory();

  public int number; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String first_Name; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String last_Name; // required
  public int age; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    NUMBER((short)1, "number"),
    FIRST__NAME((short)2, "first_Name"),
    LAST__NAME((short)3, "last_Name"),
    AGE((short)4, "age");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // NUMBER
          return NUMBER;
        case 2: // FIRST__NAME
          return FIRST__NAME;
        case 3: // LAST__NAME
          return LAST__NAME;
        case 4: // AGE
          return AGE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __NUMBER_ISSET_ID = 0;
  private static final int __AGE_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.NUMBER, new org.apache.thrift.meta_data.FieldMetaData("number", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FIRST__NAME, new org.apache.thrift.meta_data.FieldMetaData("first_Name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LAST__NAME, new org.apache.thrift.meta_data.FieldMetaData("last_Name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AGE, new org.apache.thrift.meta_data.FieldMetaData("age", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(hello.class, metaDataMap);
  }

  public hello() {
  }

  public hello(
    int number,
    java.lang.String first_Name,
    java.lang.String last_Name,
    int age)
  {
    this();
    this.number = number;
    setNumberIsSet(true);
    this.first_Name = first_Name;
    this.last_Name = last_Name;
    this.age = age;
    setAgeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public hello(hello other) {
    __isset_bitfield = other.__isset_bitfield;
    this.number = other.number;
    if (other.isSetFirst_Name()) {
      this.first_Name = other.first_Name;
    }
    if (other.isSetLast_Name()) {
      this.last_Name = other.last_Name;
    }
    this.age = other.age;
  }

  public hello deepCopy() {
    return new hello(this);
  }

  @Override
  public void clear() {
    setNumberIsSet(false);
    this.number = 0;
    this.first_Name = null;
    this.last_Name = null;
    setAgeIsSet(false);
    this.age = 0;
  }

  public int getNumber() {
    return this.number;
  }

  public hello setNumber(int number) {
    this.number = number;
    setNumberIsSet(true);
    return this;
  }

  public void unsetNumber() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NUMBER_ISSET_ID);
  }

  /** Returns true if field number is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NUMBER_ISSET_ID);
  }

  public void setNumberIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NUMBER_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getFirst_Name() {
    return this.first_Name;
  }

  public hello setFirst_Name(@org.apache.thrift.annotation.Nullable java.lang.String first_Name) {
    this.first_Name = first_Name;
    return this;
  }

  public void unsetFirst_Name() {
    this.first_Name = null;
  }

  /** Returns true if field first_Name is set (has been assigned a value) and false otherwise */
  public boolean isSetFirst_Name() {
    return this.first_Name != null;
  }

  public void setFirst_NameIsSet(boolean value) {
    if (!value) {
      this.first_Name = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getLast_Name() {
    return this.last_Name;
  }

  public hello setLast_Name(@org.apache.thrift.annotation.Nullable java.lang.String last_Name) {
    this.last_Name = last_Name;
    return this;
  }

  public void unsetLast_Name() {
    this.last_Name = null;
  }

  /** Returns true if field last_Name is set (has been assigned a value) and false otherwise */
  public boolean isSetLast_Name() {
    return this.last_Name != null;
  }

  public void setLast_NameIsSet(boolean value) {
    if (!value) {
      this.last_Name = null;
    }
  }

  public int getAge() {
    return this.age;
  }

  public hello setAge(int age) {
    this.age = age;
    setAgeIsSet(true);
    return this;
  }

  public void unsetAge() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AGE_ISSET_ID);
  }

  /** Returns true if field age is set (has been assigned a value) and false otherwise */
  public boolean isSetAge() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AGE_ISSET_ID);
  }

  public void setAgeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AGE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case NUMBER:
      if (value == null) {
        unsetNumber();
      } else {
        setNumber((java.lang.Integer)value);
      }
      break;

    case FIRST__NAME:
      if (value == null) {
        unsetFirst_Name();
      } else {
        setFirst_Name((java.lang.String)value);
      }
      break;

    case LAST__NAME:
      if (value == null) {
        unsetLast_Name();
      } else {
        setLast_Name((java.lang.String)value);
      }
      break;

    case AGE:
      if (value == null) {
        unsetAge();
      } else {
        setAge((java.lang.Integer)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case NUMBER:
      return getNumber();

    case FIRST__NAME:
      return getFirst_Name();

    case LAST__NAME:
      return getLast_Name();

    case AGE:
      return getAge();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case NUMBER:
      return isSetNumber();
    case FIRST__NAME:
      return isSetFirst_Name();
    case LAST__NAME:
      return isSetLast_Name();
    case AGE:
      return isSetAge();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof hello)
      return this.equals((hello)that);
    return false;
  }

  public boolean equals(hello that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_number = true;
    boolean that_present_number = true;
    if (this_present_number || that_present_number) {
      if (!(this_present_number && that_present_number))
        return false;
      if (this.number != that.number)
        return false;
    }

    boolean this_present_first_Name = true && this.isSetFirst_Name();
    boolean that_present_first_Name = true && that.isSetFirst_Name();
    if (this_present_first_Name || that_present_first_Name) {
      if (!(this_present_first_Name && that_present_first_Name))
        return false;
      if (!this.first_Name.equals(that.first_Name))
        return false;
    }

    boolean this_present_last_Name = true && this.isSetLast_Name();
    boolean that_present_last_Name = true && that.isSetLast_Name();
    if (this_present_last_Name || that_present_last_Name) {
      if (!(this_present_last_Name && that_present_last_Name))
        return false;
      if (!this.last_Name.equals(that.last_Name))
        return false;
    }

    boolean this_present_age = true;
    boolean that_present_age = true;
    if (this_present_age || that_present_age) {
      if (!(this_present_age && that_present_age))
        return false;
      if (this.age != that.age)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + number;

    hashCode = hashCode * 8191 + ((isSetFirst_Name()) ? 131071 : 524287);
    if (isSetFirst_Name())
      hashCode = hashCode * 8191 + first_Name.hashCode();

    hashCode = hashCode * 8191 + ((isSetLast_Name()) ? 131071 : 524287);
    if (isSetLast_Name())
      hashCode = hashCode * 8191 + last_Name.hashCode();

    hashCode = hashCode * 8191 + age;

    return hashCode;
  }

  @Override
  public int compareTo(hello other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetNumber()).compareTo(other.isSetNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number, other.number);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFirst_Name()).compareTo(other.isSetFirst_Name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFirst_Name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.first_Name, other.first_Name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLast_Name()).compareTo(other.isSetLast_Name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLast_Name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.last_Name, other.last_Name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAge()).compareTo(other.isSetAge());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAge()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.age, other.age);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("hello(");
    boolean first = true;

    sb.append("number:");
    sb.append(this.number);
    first = false;
    if (!first) sb.append(", ");
    sb.append("first_Name:");
    if (this.first_Name == null) {
      sb.append("null");
    } else {
      sb.append(this.first_Name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("last_Name:");
    if (this.last_Name == null) {
      sb.append("null");
    } else {
      sb.append(this.last_Name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("age:");
    sb.append(this.age);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class helloStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public helloStandardScheme getScheme() {
      return new helloStandardScheme();
    }
  }

  private static class helloStandardScheme extends org.apache.thrift.scheme.StandardScheme<hello> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, hello struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number = iprot.readI32();
              struct.setNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // FIRST__NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.first_Name = iprot.readString();
              struct.setFirst_NameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LAST__NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.last_Name = iprot.readString();
              struct.setLast_NameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.age = iprot.readI32();
              struct.setAgeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, hello struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(NUMBER_FIELD_DESC);
      oprot.writeI32(struct.number);
      oprot.writeFieldEnd();
      if (struct.first_Name != null) {
        oprot.writeFieldBegin(FIRST__NAME_FIELD_DESC);
        oprot.writeString(struct.first_Name);
        oprot.writeFieldEnd();
      }
      if (struct.last_Name != null) {
        oprot.writeFieldBegin(LAST__NAME_FIELD_DESC);
        oprot.writeString(struct.last_Name);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(AGE_FIELD_DESC);
      oprot.writeI32(struct.age);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class helloTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public helloTupleScheme getScheme() {
      return new helloTupleScheme();
    }
  }

  private static class helloTupleScheme extends org.apache.thrift.scheme.TupleScheme<hello> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, hello struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetNumber()) {
        optionals.set(0);
      }
      if (struct.isSetFirst_Name()) {
        optionals.set(1);
      }
      if (struct.isSetLast_Name()) {
        optionals.set(2);
      }
      if (struct.isSetAge()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetNumber()) {
        oprot.writeI32(struct.number);
      }
      if (struct.isSetFirst_Name()) {
        oprot.writeString(struct.first_Name);
      }
      if (struct.isSetLast_Name()) {
        oprot.writeString(struct.last_Name);
      }
      if (struct.isSetAge()) {
        oprot.writeI32(struct.age);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, hello struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.number = iprot.readI32();
        struct.setNumberIsSet(true);
      }
      if (incoming.get(1)) {
        struct.first_Name = iprot.readString();
        struct.setFirst_NameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.last_Name = iprot.readString();
        struct.setLast_NameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.age = iprot.readI32();
        struct.setAgeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

